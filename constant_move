import simplegui


# return rectangle coordinate
#===================================================
def rect_coords (length, height, startpos = (0, 0)) :
    return [
        (startpos[0], startpos[1]),
        (startpos[0], startpos[1] + height),
        (startpos[0] + length, startpos[1] + height),
        (startpos[0] + length, startpos[1])  
    ]






'''
canvas.draw_circle(center_point, radius, 
                  line_width, line_color, fill_color = color)
=> classes needed
   - ShapeAttributes: line_width, line_color, fill_color = color
   - Circle: center_point, radius, def: update_x, update_y
   - Character: def: draw circle, getKey> update x/y     
'''
#===================================================
class ShapeAttributes:
    def __init__ (self):
        self.line_width = 10
        self.line_color = "Aqua"
        self.fill_color = "Pink"
        
        # For color: http://www.codeskulptor.org/docs.html#Colors
        

class Circle:
    def __init__ (self):
        self.radius = 50
        self.center_point = (100, 100)
    
    '''
    def update_x (self, shift_x):
        self.center_point = (
            self.center_point[0] + shift_x,
            self.center_point[1]
        )
    
    def update_y (self, shift_y):
        self.center_point = (
            self.center_point[0],
            self.center_point[1] + shift_y
        )
    '''

class Character:
    key_map = {
        "left": 37,
        "up"  : 38,
        "right":39,
        "down": 40
    }

    move_dist = 1
    vel = [move_dist, 0]
         
           
    
    def __init__ (self):
        self.circle_shape = Circle()
        self.shape_attributes = ShapeAttributes()
     
    #draw a circle on canvas
    #(center_point, radius, line_width, line_color, fill_color = color
    def draw_me (self, canvas):
        
        #=================add=======================
        #self.circle_shape.center_point[0] += Character.vel[0]
        # can't change value above. but can point to different reference
        self.circle_shape.center_point = (
            self.circle_shape.center_point[0] +  Character.vel[0],
            self.circle_shape.center_point[1] + Character.vel[1]
        )        
        
        #self.circle_shape.center_point[1] += vel[1]
           
        canvas.draw_circle (
            self.circle_shape.center_point,
            self.circle_shape.radius,
            self.shape_attributes.line_width,
            self.shape_attributes.line_color,
            self.shape_attributes.fill_color
        )
    
    # get input key press and move the circle
    def move (self, key):
        
        #check if key is in key_map array. 
        #Character: this class name
        if key in Character.key_map.values():
            if key == Character.key_map["right"]:
                print "move right"
                
                #self.circle_shape.update_x(Character.move_dist)
                Character.vel = [Character.move_dist, 0]
                
            if key == Character.key_map["left"]:
                print "move left"
                
                #self.circle_shape.update_x(-Character.move_dist)    
                Character.vel = [-Character.move_dist, 0]
            
            if key == Character.key_map["up"]:
                print "move up"
                
                #self.circle_shape.update_y(-Character.move_dist)
                Character.vel = [0, -Character.move_dist]
        if key == Character.key_map["down"]:
                print "move down"
                
                #self.circle_shape.update_y(Character.move_dist)
                Character.vel = [0, Character.move_dist]
        
cliq = Character()            
                

        
        
        

# draw on canvas
#===================================================
def draw(canvas):

        #canvas.draw_polygon(point_list, 
        #line_width, line_color, fill_color = color)    
    box1 = rect_coords(500, 500, startpos = (0, 0))
    #box2 = rect_coords(480, 480, startpos = (20, 20))
    canvas.draw_polygon(box1, 20, "Aqua") #draw rectangle
    #canvas.draw_polygon(box2, 20, "Pink")

        
    cliq.draw_me(canvas)    #draw circle 
        
    return
 

# add functions and handler to frame
#===================================================
frame = simplegui.create_frame("Home", 500, 500)
frame.set_canvas_background("Silver")

frame.set_draw_handler(draw)
frame.set_keydown_handler(cliq.move) #for move circle******

frame.start()




























